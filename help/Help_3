3: configurer flrn

	flrn : fichier de configuration
	-------------------------------

=============================================
A) Lieu du fichier de configuration
B) Forme générale du fichier de configuration
     * les conditionnelles
     * les options principales
C) Variables utilisées avec l'option "set"
     * Abonnement
     * Affichage
     * Jeux de caractères
     * Commandes
     * Poster
     * Kill-file
     * Autres
     * Options obsolètes
=============================================


A) Lieu du fichier de configuration
   --------------------------------

Quand on lance flrn, le programme recherche un fichier de configuration
dans plusieurs endroits, qui dépendent des variables d'environnement
FLRNHOME, HOME, et des options de compilations DEFAULT_DIR_FILE et
DEFAULT_CONFIG_FILE. Par défaut, DEFAULT_DIR_FILE vaut ".flrn" et 
DEFAULT_CONFIG_FILE vaut ".flrnrc".

  - tout d'abord, flrn cherche $FLRNHOME/DEFAULT_DIR_FILE/DEFAULT_CONFIG_FILE,
    ou $HOME/DEFAULT_DIR_FILE/DEFAULT_CONFIG_FILE si FLRNHOME n'est pas défini.
  - ensuite, flrn cherche $FLRNHOME/DEFAULT_CONFIG_FILE ou 
    $HOME/DEFAULT_CONFIG_FILE
  - si aucun de ces fichiers existent, flrn cherche le fichier de configuration
    par défaut qui doit être PATH_CONFIG_DIRECTORY/DEFAULT_CONFIG_SYS_FILE
    (par défaut /usr/local/share/flrn/flrnrc).

Tous les fichiers utilisés ensuite par flrn seront recherchés ensuite dans 
$(FLRN)HOME/DEFAULT_DIR_FILE ou $(FLRN)HOME ensuite (sauf si leur nom
comprend un chemin d'accès absolu).

B) Forme générale du fichier de configuration
   ------------------------------------------

La forme générale des options est inspirée de mutt. Chaque option prend
une ligne, mais on peut utiliser des conditionnelles pour choisir de lire
ou non une commande ou un bloc de commandes.

  Les conditionnelles
  -------------------

Elle sont de deux formes :
   + en précédent une option par "name <nom> ", l'option n'est prise en
     compte que lorsque le nom d'invocation de flrn (ou de l'option --name)
     est <nom>.
   + (expérimental) on peut aussi faire une conditionnelle de la forme
         if <condition>
	    bloc d'options
	 endif
     <condition> doit pour l'instant prendre la forme suivante :
         - "name <str>" renvoie vrai si le nom d'invocation contient la
	    chaîne <str>
	 - "version=[num]", "version<[num]", "version>[num]" ...
	   permet de comparer la version de flrn (sous la forme
	   (version majeure)*100+(version mineure)*10) avec un entier [num].
	 - "has <option>" (resp. "hasnot <option>") renvoie vrai si flrn
	   a (resp. n'a pas) la capacité <option>. Les valeurs possible
	   pour <option> sont :
	      . "sendmail" si l'option SENDMAIL est définie
	      . "slang_language" si l'option USE_SLANG_LANGUAGE est définie
	      . "check_mail" si l'option CHECK_MAIL est définie
      si la condition est vraie, le bloc d'option est interprété.

   Les options principales
   -----------------------

Elles sont au nombre de onze.

include <file>

        inclut le fichier <file> dans la lecture des options
	demande de charger le fichier <file>. Si <file> commence par un '/',
	alors le chemin d'accès à <file> sera absolu. Il est impossible
	de faire plus de 10 inclusions imbriquées.

set <variable>=<valeur>

	Permet de modifier la valeur d'une variable de configuration.
	On a les racourcis suivants : "set <variable>" est équivalent à "set
	variable=1" ou "set variable=yes". De même, "set no<variable>" est
	équivalent à "set <variable>=no" ou "set <variable>=0". La liste des
	variables est donnée plus bas.

header	list|weak|hide <une suite de chiffre ou de noms> 

	donne l'ordre dans lequel les entêtes d'un
        article doivent être affichés. À chaque chiffre correspond un entête :
         1 : Newsgroups   2 : Followup-To   3 : Date          4 : Lines
         5 : Expires      6 : Xref          7 : X-Trace       8 : Auteur 
         9 : Sujet       10 : Organisation 11 : Sender       12 : Reply-To    
	13 :X-Newsreader 14 : To           15 : Cc           16 : Bcc
	17 :X-Censorship 18 : References   19 : Message-ID
	On peut mettre d'autres entêtes en donnant leur nom complet. 
	On peut aussi mettre 'others' pour signifier tous les autres entêtes,
	qui sont alors affiché dans un ordre quelconque.
	(défaut : 2 1 4 3)
	Avec weak, on donne ceux qui ne doivent pas être réaffichés après la
	première page d'un message.
	Avec hide, on indique les headers à ne pas afficher avec others.
	Les listes ne peuvent pas dépasser 30 entrées, et on ne peut
	définir plus de 30 nom d'entêtes qui n'ont pas de numéros associés.
	(pas de défaut)

my_hdr  <nom>: <champ>
	demande à ajouter par défaut le header <nom> avec le contenu <champ>
	dans les messages postés. <champ> ne peut pas dépasser une ligne.
	Dans le cas où <nom> a déjà été utilisé, l'ancien champ n'est plus
	utilisé. Si <champ> est vide, on demande à ne plus ajouter le header
	en question.
	On ne peut modifier les headers 'References:', 'Subject:', 'Date:',
	'Newsgroups:', 'Sender:' et 'To:' de cette façon.
	On peut modifier le header 'From:', mais si on ne désire pas changer
	l'adresse, il est préférable d'utiliser la variable post_name.
	La chaîne <champ> est formatée comme celle de la variable
	"attribution" (voir plus bas).

my_flags <caractère> <filtre>
my_flags clear

	demande à rajouter le caractère <caractère> devant le champ Sujet
	du message affiché si celui-ci vérifie des propriétés. <filtre>
	est un filtre admis par le kill-file (voir la section 6 de l'aide).
   Par exemple :
     my_flags - read
     my_flags * Subject: Re:
   La première ligne demande de noter les messages lus avec un '-'.
   La seconde ligne demande de noter les messages de réponse par un '*'.
	

color   <types> <n1> <n2> <p1>,<p2>,...
mono   <types> <p1>,<p2> ...
regcolor   <types> <flags> <n1> <n2> <p1>,<p2>,... <regexp>

        Fixe la couleur et/ou les propriétés des objets de flrn. La commande
	color modifie les couleurs par défaut, la commande mono les spécifie
	si le terminal est monochrome, la commande regcolor permet, pour un
	objet choisi, de modifier des patterns donnés.
        <types> est une suite de mots séparés par des virgules, choisis dans :
	     normal : pour l'article par exemple (défaut: valeurs du terminal)
	     header : pour les headers           (défaut: vert sur fond normal)
	     status : pour la barre de newsgroup (défaut: inverse video)
	     error  : pour les messages d'erreur (défaut: rouge gras)
             quoted : pour les citations         (défaut: magenta)
	     fin    : pour le "A vous:" final    (défaut: en gras)
             sig    : pour les signatures        (défaut: en bleu)
             file   : pour les fichiers (aide)   (défaut: normal)
             summary: pour les résumés           (défaut: normal)
	     search : pour les recherches	 (défaut: inverse vidéo)
	     at_mine: messages à soi dans l'arbre de discussion
	                                         (défaut: rouge)
	     at_other: messages non à soi dans l'arbre de discussion
	                                         (défaut: normal)
	     all    : tous les objets
	<n1> et <n2> sont les couleurs des caractères et du fond
	<p1> ... sont les attributs des caractères : cela comprend
	   	bold (gras), blink (souvent non défini),
		underline (souligné), et reverse (en inverse video),
		normal et - (qui équivaut à normal)
	on peut aussi mettre pour les couleurs et les attributs std (couleur
	du dernier type utilisé dans la commande), et std-<type> qui
	représente la couleur|attribut du dernier color|mono <type> fait.
	<flags> est une suite de flags, parmis :
		case : la regexp est case-sensitive
		exclude : on exclue les autres regcolor d'un ligne qui matche
		line : toute la ligne est mise dans la couleur choisie
		n dans [1-9] : seule le groupe n est coloré
	<regexp> est une expression régulière
   Exemples :
     color file std-normal std-normal bold,underline
     regcolor normal line std-quoted std-quoted std-quoted ^(»|<<)
     mono status,error bold

     La première ligne affiche les fichiers en gras souligné, si la couleur
     est utilisée.
     La seconde ligne demande d'afficher comme des citations les lignes
     commencant par » ou '<<'.
     La troisième ligne demande que la ligne de statut et les messages d'erreur
     soient en gras.

bind	[<mode>] [add] <touche> <commande>

	Permet de changer la fonction d'une touche. <mode> se rapporte
	au mode d'utilisation dans lequel le binding prend effet (voir
	la section 4 de l'aide). Par défaut, le monde considéré est
	le mode commande. Le nom de la commande doit appartenir au
	mode utilisé.
	
	La commande peut prendre un argument. Si l'interface avec slang
	est disponible, on peut aussi avoir, en mode commande, une commande
	de la forme [<fun>] ou [<fun>,<num>]. Voir la section 7 pour
	plus de détails.
	
	L'ajout de "add" permet de signaler qu'on désire ajouter au raccourci
	existant déjà (dans le mode considéré) une nouvelle commande. Ainsi
	on peut faire plusieurs opérations avec un seul raccourci clavier
	(macro).
	
	On peut utiliser \<n> pour représenter le code ASCII <n>. <n> est
	en base 10 normalement, en base 8 s'il commence pas un 0, et en
	base 16 s'il commence par '0x'.
	Les noms suivants se rapportent à des touches autres :
	  'up' permet de désigner la flèche vers le haut
	  'down' permet de désigner la flèche vers le bas
	  'right' permet de désigner la flèche vers la droite
	  'left' permet de désigner la flèche vers la gauche
	  'pageup' désigne la touche "Page Up" du clavier
	  'pagedown' désigne la touche "Page Down" du clavier
	  'home' désigne la touche "Home" du clavier
	  'end' désigne la touche "End" du clavier
	Le nom 'F<n>' désigne la touche de fonction F<n>.
	C<lettre>, c<lettre>, ou ^<lettre> désigne la combinaison
	Control-<lettre>.
	M<touche>, m<touche> désigne la combinaison Méta-touche.
  exemples :
    bind U pipe urlview
    bind command + select 1-,unread	# ce raccourci existe deja
    bind \0x01 gotag é  # ^A
    bind A tag é
    bind menu T toggle
    bind menu add T up
    bind pager pageup pgup
    bind pager pagedown pgdown

  Notes : Dans flrn, DELETE et BACKSPACE ont TOUJOURS la même fonction, afin
	  de s'affranchir de problèmes dus à de mauvaises configuration. Cette
	  fonction correspond au backspace courant et n'est pas modifiable.
	  De même les touches dans « -_.,*:? », ainsi que <enter>, <espace> et
	  les chiffres ne sont pas modifiables.

autocmd enter|leave <regexp> <commande>

	Cette option demande l'execution automatique de la commande 
	<commande> quand on entre (si le mot clé enter est utilisé)
	ou on sort (si le mot clé leave est utilisé) d'un groupe 
	dont le nom accepte l'expression régulière <regexp>. Il est
	préférable d'utiliser cette option avec prudence, essentiellement
	pour modifier localement certaines variables de configuration.

parse_slang <fichier>

	Demande à flrn de lire et interpréter <fichier> en tant que
	fichier slang.
	Cette option n'est pas reconnue si flrn n'est pas compilé avec
	l'interfaçage avec slang.


C) Variables utilisées avec l'option "set"
   ---------------------------------------

Les valeurs par défaut sont définies dans le fichier site_config.h au
moment de la compilation. On peut les obtenir en lançant 
"flrn --show-config".

**************
* Abonnement *
**************

auto_ignore=<une expression reguliere>
	demande le non-abonnement automatique aux newsgroups dont le
	nom vérifie l'expression régulière
	(défaut : "^control|^[^.]+$", soit en gros ignorer control et junk)

auto_subscribe=<une expression reguliere>
	demande l'abonnement automatique aux newsgroups dont le nom
	verifie l'expression régulière
	(défaut : aucun)

default_subscribe=yes|no
	définit le comportement par défaut lors de la création d'un nouveau
	groupe, quand il ne s'applique pas à auto_subscribe et auto_ignore.
	(défaut : yes)

subscribe_first=yes|no
	choisit si on doit ignorer un groupe accepté à la fois par
	auto_subscribe et auto_ignore. Si la variable est égale à yes,
	alors de tels groupes sont classés comme non-abonnés.
	(défaut : yes)
	
warn_if_new=yes|no
	au lancement de flrn, si cette option est activée, le programme
	affiche la liste des nouveaux newsgroups, avec le comportement qu'a
	adopté flrn pour chacun d'eux.
	(défaut : no)

*************
* Affichage *
*************

color=yes|no|auto
	demande l'utilisation de la couleur. Auto (ou -1) signifie que flrn
	tente une détection automatique.
	(défaut : auto)

date_in_summary=yes|no
	affiche ou non la date dans les résumés.
	(défaut : yes)

duplicate_subject=yes|no
	activée, flrn affiche le sujet à chaque ligne de résumé, même si
	c'est le même que la ligne au-dessus. Sinon flrn affiche des points.
	(défaut : no)

flags_group=<une chaine de 8 caractères>
	donne les drapeaux (de la forme [?], où ? est un caractère) à mettre
	dans la barre de statut devant le nom du groupe courant, en fonction
	des statuts de celui-ci. Si le caractère correspondant au statut est
	un espace, aucun drapeau n'est mis. La correspondance entre place
	du caractère et statut est la suivante (« mode censure » signifie
	que le groupe est dans la liste principale du kill-file) :
	 numéro du caractère    | mode censure  | abonné  |  en lecture seule
	 	1		|     oui       |   oui   |       non
		2		|     non       |   oui   |       non
	 	3		|     oui       |   non   |       non
		4		|     non       |   non   |       non
	 	5		|     oui       |   oui   |       oui
		6		|     non       |   oui   |       oui
	 	7		|     oui       |   non   |       oui
		8		|     non       |   non   |       oui
	(défaut: " TDD*tdd")

headers_scroll=yes|no
	cette option activée, les entêtes d'un message défilent avec le
	reste du message. flrn le fait également si l'écran est trop petit.
	(défaut : no)

help_line=yes|no
	lorsque cette option est activée, flrn affiche une ligne d'aide
	contextuelle à l'avant-dernière ligne de l'écran.
	(défaut : yes)

help_line_file=<chaîne>
	donne le lieu du fichier d'aide utilisé par l'aide contextuelle
	(de l'option help_line). Ce fichier doit comporter 17 lignes
	qui servent dans les contextes suivants (si il y a moins de lignes,
	les derniers contextes ne sont pas modifiés) :
	 1: mode commande normal   2: mode arbre de dicussions (\show-tree)
	 3: mode pager/commande    4: mode commande/pager
	 5: affiche d'un fichier, \list sans menu
	 6: menu (\history)  7: menu (résumés) 8: menu (\select)
	 9: menu (\swap-group) 10: menu (\keybindings) 11: menu (choix seul)
	12: menu (choix d'un groupe dans un post)  13: menu (\list et \LIST)
	14: menu (\config)  15: résumés (sans use_menus)
	16: mode pager pour une commande (\filter...)
	17: fin de l'affichage dans l'aide
	(défaut: aucun, mais des lignes sont définies par défaut dans le code)

ordered_summary=yes|no
	affiche les résumés dans l'ordre de leur numéro, et non dans un ordre
	threadé.
	(défaut : yes)

parse_from=yes|no
	Lorsque cette option est égales à yes, les entêtes Auteur: et
	Réponse à: de l'affichage sont simplifiées pour ressembler dans
	la mesure du possible à celles de l'ancien forum.
	(défaut: no, mais yes dans les configurations pour forum)

scroll_after_end=yes|no
	Cette option permet de préciser si, avec un page-down qui mène à
	la fin d'un défilement, on doit s'arrêter strictement à la fin
	ou finir le page-down.
	(défaut: no)

skip_line=<un numéro>
	définit le nombre de lignes blanches à laisser sous la barre de status.
	(défaut : 1)

small_tree=yes|no|-1
        quand cette option est activée, flrn affiche un arbre représentant
	la discussion en haut à droite du terminal. Désactivée, flrn
	affiche des flèches. La valeur -1 permet de ne rien afficher.
	(défaut : no)

**********************
* Jeux de caractères *
**********************

Ces options n'ont de valeur que lorsque 

editor_charset=<chaîne>
	jeu de caractère que l'éditeur de messages est censé utiliser.
	Quand cette option n'est pas définie, flrn suppose que le jeu
	est le même que celui de terminal_charset.
	(défaut : "")

files_charset=<chaîne>
	jeu de caractères utilisé par flrn pour la lecture et l'écriture
	de fichiers (en dehors de l'éditeur), ainsi que la communication
	avec l'interface de S-Lang et les programmes extérieures. Si
	cette option n'est pas définie, flrn prend le jeu défini par
	terminal_charset.
	(défaut : "")

post_charsets=<chaîne>
	donne la liste des jeux de caractères que flrn peut utiliser
	pour l'encodage à envoyer au serveur. Chaque nom doit être séparé
	par des ':', et flrn tente d'abord l'encodage le plus à gauche,
	puis, si ce n'est pas possible, évolue vers la droite. Si aucun
	encodage n'est possible, flrn poste en utf-8. Lorsque cette
	option n'est pas définie, flrn essaye d'utiliser terminal_charset.
	(défaut : "")

terminal_charset=<chaîne>
	jeu de caractère utilisé pour l'affichage dans le terminal. Si
	cette option n'est pas définie, flrn utilise les variables
	d'environnement locales.
	(défaut : "")

*************
* Commandes *
*************
	
cbreak=yes|no
	passe en mode cbreak. Sans cette options, on est en mode nocbreak,
	c'est-à-dire que chaque commande doit se terminer par la touche
	<entrée>. Cette option doit être activée par défaut.
	(défaut : yes)

cool_arrows=yes|no
	N'affiche pas de message d'erreur quand on utilise une commande de
	déplacement dans le thread et que ce déplacement est invalide.
	(défaut : yes)

forum_mode=yes|no
	avec cbreak=yes, tempère un mode le mode d'entrée
	des commandes en demandant la touche <entrée> en fin de certaines
	commandes. Cette option sert pour la compatibilité avec l'ancien
	forum. Elle rend aussi certaines commandes plus intuitives.
	La section 4 de l'aide détaille les commandes concernées.
	(défaut: no, mais yes dans les configurations pour forum)

quit_if_nothing=yes|no
	dit à flrn de quitter lorsqu'il n'y a rien à lire. Cette option
	n'est pas interessante, flrn effaçant l'écran tout de même.
	(défaut : no)

savepath=<une_chaine>
	donne un chemin d'accès vers un répertoire où sauver les messages
	de flrn. Sans cette option, les messages sont sauvés dans le
	répertoire courant.
	(défaut : "")

space_is_return=yes|no
	empêche de changer de groupe par la commande \next-unread (qui
	correspond par défaut à la barre d'espacement).
	(défaut : no)

threaded_next=yes|no
	permet de lire les messages en suivant la discussion (thread) ou dans
	l'ordre des numéros. Cette option modifie l'action de la commande
	\next-unread.
	(défaut : no, mais yes dans la config conscrit)

use_menus=yes|no
	Utilise des menus interactifs avec certaines commandes (goto...).
	Cette option très puissante va devenir le comportement par défaut.
	A noter que certaines commandes utilisent de toute façon des menus
	(\menu*)
	(défaut : no, mais cela va changer)

use_regexp=yes|no
	permet d'utilise les expressions régulières pour toutes les commandes
	qui demandent de choisir un ou des groupes (\list, \goto...).
	Les expressions utilisées sont normalement les expressions étendues
	POSIX.
	(défaut : no)

with_cousins=yes|no
	très conseillée avce l'option alpha_tree, cette option permet
	de se déplacer entre les cousins d'une discussion avec les flèches.
	(défaut : no)

zap_change_group=yes|no
	dit a flrn de changer de groupe si on utilise la commande zap.
	(défaut : no)

**********
* Poster *
**********

attribution=<chaine>
	donne la chaine à placer devant le message cité dans une réponse.
	Cette chaîne est interprétée avec les symboles suivants :
	%n désigne le nom de l'auteur du message.
	%i le message-ID du message.
	%G le groupe dans lequel le message est considéré, %g le nom de ce
	  groupe "tronqué".
	%C le numéro du message dans le groupe
	%% désigne enfin le caractère '%'.
	%{nom-du-header} est remplacé par l'entête dans le message
	%`cmd` est remplacé par le résultat de la commande `cmd`
	  executée par /bin/sh
	%[fun] est remplacé par la sortie par S-Lang de l'interprétation
	  de fun (si l'interface S-Lang est disponible).
	Ce format fonctionne aussi dans l'option my_hdr.
	(défaut : "%n, dans le post %i, a écrit :")

edit_all_headers=yes|no
	lors de l'édition, cette option détermine si flrn doit proposer
	l'ensemble des entêtes qu'il connait ou juste Newsgroups: (renommé
	Groupes:) et Subject: (renommé Sujet:). Même désactivée, il est
	toujours possible de rajouter des entêtes à la main. Un utilisateur
	un peu familiarisé avec les groupes de discussions gagnera a
	activer cette option.
	(défaut : no)

include_in_edit=yes|no
	insère automatiquement le message auquel on répond dans l'éditeur.
	(défaut : no)

index_string=<str>
	donne la chaîne ajoutée au début de chaque ligne du message auquel
	on répond pour quoter celui-ci.
	(défaut : "> ")

post_name=<un nom>
	choisis le nom utilisé dans les messages envoyés.
	Cette option est incompatible avec un 'my_hdr From:'.
	(défaut : "")

quote_all=yes|no
	cette option demande à flrn de citer tout le message, entêtes
	compris, lors du lancement de l'éditeur pour une réponse à un
	message.
	(défaut : no)

quote_sig=yes|no
	cette option demande à flrn de citer la signature du message 
	lors du lancement de l'éditeur pour une réponse à un message.
	(défaut : no)

simple_post=yes|no
	cette option activée, flrn essaie d'adapter le message pour
	qu'il soit accepté par le serveur. Cela marche plutôt mal.
	(défaut : yes)

smart_quote=yes|no
	si index_string commence par '>' et que la ligne à quoter commence
	aussi par '>', quote simplement par ">" et non par index_string.
	(défaut : yes)

*************
* kill-file *
*************

auto_kill=yes|no
	demande d'ajouter à la liste principale de censure les nouveaux
	groupes.
	(défaut : yes)

kill_fill_name=<nom>
	donne le nom du fichier de kill-file
	(défaut : .flrnkill)

**********
* Autres *
**********

alternate=<une expression reguliere>
	permet à l'utilisateur de décrire des adresses de courrier
	électronique comme les siennes : flrn affichera les messages ayant
	ces adresses en From: comme provenant de l'utilisateur, et acceptera
	les annulations et remplacements de ces messages (sous réserve que
	le Sender: soit correct ou inexistant).
	(défaut : aucun)

auth_user=<chaîne>
	donne un nom d'utilisateur pour l'authentification de flrn au
	serveur de groupes de discussion, si nécessaire.
	(défaut : aucun)

auth_pass=<chaîne>
	donne un mot de passe pour l'authentification de flrn au serveur
	de groupes de discussion, si nécessaire. S'utilise conjointement
	à auth_user. Si aucun mot de passe n'est donné et que le serveur
	en demande un, flrn le demandera à l'utilisateur.
	(défaut : aucun)

check_mail=yes|no
	lorsque cette option est activée, flrn vous informe si vous avez
	du courier (par la variable d'environnement $MAIL). Lorsque
	vous avez un nouveau courier, flrn affiche "(mail)" devant
	l'invite sur la dernière ligne de l'écran.
	(défaut : yes)

default_flnewsfile=<chaîne>
	Si le .flnewsrc avec son extension (défini par flnews_ext) n'existe
	pas ou est vide, flrn prend le fichier désigné par cette option.
	Cette option est tout particulièrement utile dans le fichier de
	configuration par défaut.
	(défaut : "")

flnews_ext=<chaîne>
	donne l'extension à ajouter au .flnewsrc. Utile pour faire du
	multiserveur.
	(défaut : "")

hist_file_name=<chaîne>
	si un nom de fichier est entré, flrn utilise ce fichier comme
	lieu de sauvegarde de l'historique d'une session sur l'autre.
	(défaut : "")

max_group_size=<nombre>
	permet de limiter la lecture des gros groupes par flrn aux messages
	les plus récents. Lorsque cette valeur vaut -1, flrn charge tous
	les messages à l'entrée dans le groupe. Sinon, la valeur donne
	le nombre de messages à charger dans le groupe avant le premier
	message non lu. Un appel au tout premier message du groupe (le '1')
	fera télécharger le reste du groupe par flrn (tant que cet appel
	n'est pas fait, flrn se comporte comme si les articles avant
	n'existent pas.
	(défaut : -1)

port=<n>
	utilise le port donné plutôt que le port nntp.
	(défaut : le port nntp)

prefixe_groupe=<chaine>
	donne un préfixe par défaut commun à tous les groupes utilisés.
	Cette option permet de simplifier l'affichage, et est utilisée
	aussi pour vérifier l'existence des groupes lors du post d'un
	message.
	(défaut : "")

quit_if_nothine=yes|no
	Quitte directement flrn si il n'y a rien de nouveau. Malheureusement,
	efface quand même l'écran.
	(défaut : no, parce que ce comportement est insupportable actuellement)

server=<string>
	utilise la machine correspondant à ce nom comme serveur.
	(défaut : selon l'installation locale)

short_errors=yes|no
	Cette option activée, tout message d'erreur écrit par flrn en
	bas de l'écran s'efface au bout d'une seconde. Dans le cas contraire,
	flrn attend le plus souvent qu'une touche soit envoyée.
	(défaut : no)

use_mailbox=yes|no
	Sauve les messages, ou les envoie au pager ou à un programme de
	shell, au format d'un folder mail.
	Cette option permet de lire les messages sauvés à l'aide d'un
	logiciel de lecture de mails.
	(défaut : yes)

* * * * * * * * * * * * *
*** Options obsoletes ***
* * * * * * * * * * * * *

Les options suivantes ne sont plus utilisées ou ont pris un autre nom.

auto_edit=yes|no
	cette option est obsolète depuis que flrn n'a plus d'éditeur interne.

alpha_tree=yes|no
	est devenu small_tree

threaded_space=yes|no
	est devenu threaded_next

---------------------------------
'q' permet de quitter l'aide à tout moment.
'm' permet de revenir au menu.
