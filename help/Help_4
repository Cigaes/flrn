4: entrée des commandes

	flrn : l'entrée de commandes
	----------------------------

=====================================
A) Les contextes de commande
B) Syntaxe générale d'une commande
C) Interprétation des paramètres
     * dans le contexte commande
     * dans le contexte pager
     * dans le contexte menu
D) Complétion automatique, historique
=====================================

Avertissement : le système d'entrée de commandes de flrn se voulait à la fois
                puissant, ergonomique, configurable et simple. Autant dire
		qu'il ne pouvait qu'échouer sur toute la ligne.

A) Les contextes de commande
   -------------------------

À chaque commande est associé un mode (ou contexte) de validité. Il existe
trois contextes de commandes :
  - le mode "command" est le mode par défaut
  - le mode "pager" est utilisé pour faire défiler des écrans
  - le mode "menu" est utilisé dans les menus.

Les modes "command" et "pager" peuvent être valides simultanément,
lorsque flrn affiche un article long. Si l'article affiché est à la fin,
le mode par défaut d'interprétation des commandes est "command", sinon
ce mode est "pager". On peut voir le mode affiché en commençant à taper
une commande.

Le mode "menu" est un contexte exclusif, mais certaines commandes
du mode "command" peuvent y être utilisées, avec une syntaxe spécifique
au contexte de menu.

B) Syntaxe générale d'une commande
   ------------------------------

Une commande se présente de façon générale de la façon suivante :

	[chaîne1] <nom_de_la_commande> [chaîne2]

Normalement [chaîne1] ne doit comprendre que des caractères compris dans
"0123456789<>.,_*-" et ne doit pas commencer par "-". Tout autre caractère
(y compris "-" au début) sera pris comme décrivant la commande.

Ensuite, <nom_de_la_commande> peut être un caractère raccourci de la commande,
ou un nom complet précédé par « \ » (par exemple « \swap-grp ») et suivi
par un blanc (si on doit ajouter un autre paramètre).

Enfin, [chaîne2] peut contenir n'importe quoi. Dans certains cas (voir
ci-dessous), flrn demandera forcément [chaîne2], en particulier lorsqu'il
a besoin d'un nom qui ne peut pas être rentré avec les caractères
de [chaîne1]. Dans tous les cas, il est possible de rentrer [chaîne2] en
mode "nocbreak" (voir ci-dessous), ou en utilisant l'entrée explicite
(par « \ » de la commande).

On distingue deux « modes » d'entrée de la commande :
     - Le mode "cbreak" ne demande pas forcément d'appuyer sur <enter> pour
  terminer la commande. Il est actif si l'option cbreak est activée, et si
  l'utilisateur ne commence pas son entrée par « @ », caractère spécial
  qui dit de passer en "nocbreak". Dans le mode "cbreak", flrn réagit
  directement aux touches de raccourcis sans passer par <enter>. Néanmoins, on
  peut toujours entrer le nom de la commande de façon explicite en entrant,
  après un éventuel préfixe [chaîne1], le caractère « \ ». De plus flrn admet
  la complétion automatique.
     - Le mode "nocbreak" est actif si l'option cbreak est désactivée ou
  si l'utilisateur commence son entrée par « @ ». Dans ce mode, il est
  nécessaire de terminer sa commande par <enter> (donc on peut ajouter
  [chaîne2] directement), la complétion automatique ne fonctionne pas mais
  l'historique des commandes est accessible.

C) Interprétation des paramètres
   -----------------------------

       * En mode "command"
         -----------------

Dans ce mode, les paramètres peuvent servir à désigner des articles dans
le groupe, et/ou contenir une chaîne de paramètre pour la commande (par exemple
un nom de fichier où sauver des articles). De plus, selon les cas (et
certaines options), la commande peut demander ou nom une chaîne de caractère
en paramètre si celle-ci manque (cf section 5 pour la liste détaillé
du comportement de chaque commandes).

Lorsque la commande a besoin d'une liste d'articles, cette dernière
se présente sous la forme d'éléments compris à la fois dans [chaîne1]
et [chaîne2], séparés par des virgules. Ainsi la syntaxe générale est :

 [ elem_1 [ ,elem_2 [ ,... ]]] <cmd>
                                 [ elem_k [ ,elem_k+1 [ ,... [ ,chaine ]...]]]

(si la commande accepte une chaîne en paramètre, auquelle cas ce sera le
dernier élément)

Chaque elem_i peut se décomposer sous 5 formes :
    * n1	: désigne un seul article
    * n2-n3	: désigner l'ensemble des articles allant de n2 à n3
                  (par numéro dans le groupe)
    * n4>	: désigner n4 et tous ses descendants
    * n5_	: désigner n5 et tous ses ascendants
    * n6* 	: désigner l'ensemble des articles ayant un parent commun
                  (même virtuel) avec n6, donc l'ensemble du thread.

Les n1 à n6 peuvent être un numéro strictement supérieur à 1 (qui représente
dans ce cas le numéro dans l'article dans le groupe), ou vide, ou un
0, ou 1, ou « . ». Les interprétations de ces cas particuliers sont les
suivantes :

			n1,n4,n5,n6	n2	n3
	<vide>		    C(*)	 D	 F
	0 ou .		    C		 C	 C
	1		    D	 	 D	 D

  (*) dans le cas ou il n'y a aucun élément, le comportement est souvent
  mais pas toujours identique au comportement où le message courant est
  explicitement sélectionné. Si le comportement est différent, cela sera
  précisé dans la commande.

  Dans ce tableau, "C" désigne l'article courant, "D" le début du groupe 
courant et "F" la fin du groupe. A noter que l'appel au début du groupe
provoque la lecture de l'ensemble du résumé du groupe, si celui-ci n'a
pas été lu auparavant (voir l'option "max_group_size" dans la section 3
pour plus de détails).

Chaque n1 à n6 peut être précédé ou suivi du caractère « < », qui demande
à remplacer le numéro par la racine de sa discussion (ou, plus exactement,
par son ancêtre existant le plus ancien). Par exemple « .< » désigne la racine
de la discussion contenant l'article courant (dans le cas où il est
utilisé pour un intervalle de numéro, cette racine doit avoir un numéro
dans le groupe courant).


       * En mode "pager"
         ----------------

La syntaxe générale est :
	    [num] <nom_de_la_commande> [num]
   ou bien  <nom_de_la_commande> [chaine]

où [num] désigne le nombre de fois que la commande doit être faite,
si nécessaire.
Ainsi \up 3 remontera de trois lignes. [chaine] n'est demandée et
utilisée que pour la commande \search, et ne peut pas être utilisée
simultanément avec [num].

Si plusieurs nombres sot rentrés (par exemple avant et après la commande,
ou avec des virgules entre), seul le premier sera pris en compte.

       * En mode "menu"
         --------------

La syntaxe générale du mode "menu" peut éventuellement dépendre
des commandes du mode "command" qu'on y trouve, il est donc plus difficile
de la décrire précisément. Toutefois, en général, elle est de la forme :
	  [num_etendu] <nom_de_la_commande> [chaine]
  ou      <nom_de_la_commande> [num_etendu [ ,chaine]]

 [num_etendu] peut être un nombre désignant le nombre de fois que la
commande doit être faite, ou alors certains éléments du menus pour
certaines commandes (\toggle et les commandes liées au contexte "command").
Dans ce dernier cas, les caractères suivants sont utilisables seuls :
	« * » désigne tous les éléments du menu
	« . » désigne tous les éléments sélectionnés (par \toggle)
	« _ » désigne tous les éléments acceptant l'expression régulière
	      de recherche actuelle
	« < » désigne tous les éléments jusqu'à l'élément courant
	« > » désigne tous les éléments à partir de l'élément courant

Note: les commandes du mode "command" ne peuvent être utilisées dans un
menu que sous forme « simple », pas en macro. Pour définer une macro
dans un menu utilisant une commande du mode "command", il faut utiliser
la commande de menu \cmd (cf section 5).


D) Complétion automatique, historique
   ----------------------------------

La complétion automatique, quand elle est disponible, s'utilise en
mode "cbreak" exclusivement, avec la touche <tab>. Elle s'utilise
en particulier pour compléter un nom de commande, et aussi dans
certains paramètres de certaines commandes (options, drapeaux, etc.).
Néanmoins elle n'est pas disponible partout.

L'historique des commandes tapées est accessible en mode nocbreak
avec les touches <haut> et <bas>. Cette capacité est expérimentale
et relativement limitée.


'q' permet de quitter l'aide à tout moment.
'm' permet de revenir au menu
